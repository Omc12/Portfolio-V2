/* CustomCursor.css */
* {
  cursor: none !important;
}

/* Default custom cursor (triangle) */
.custom-cursor-bg {
  position: fixed;
  width: 1vw;
  height: 1vw;
  background-color: #ff506d;
  pointer-events: none;
  z-index: 9999;
  transform: translate(-50%, -50%) rotate(-43deg);
  transition: 
    width 0.2s ease, 
    height 0.2s ease, 
    clip-path 0.7s ease, 
    transform 0.7s ease,
    filter 0.7s ease;
  clip-path: polygon(60% 0%, 0% 100%, -5% 105%, 100% 100%);
  shape-rendering: crispEdges;
  filter: drop-shadow(0 0 20px rgba(255, 80, 109, 0.8));
  display: none;
}

/* Entrance animation (when tab gains focus) */
.custom-cursor-bg.entrance {
  animation: cursorEntrance 1s ease forwards;
}

/* Exit animation (when tab loses focus) */
.custom-cursor-bg.exit {
  animation: cursorExit 0.5s ease forwards;
}

/* Entrance keyframes */
@keyframes cursorEntrance {
  0% {
    transform: translate(-50%, -50%) scale(0) rotate(-43deg);
    opacity: 0;
  }
  100% {
    transform: translate(-50%, -50%) scale(1) rotate(677deg);
    opacity: 1;
  }
}

/* Exit keyframes */
@keyframes cursorExit {
  0% {
    transform: translate(-50%, -50%) scale(1) rotate(677deg);
    opacity: 1;
  }
  100% {
    transform: translate(-50%, -50%) scale(0) rotate(-43deg);
    opacity: 0;
  }
}

/* Hover state for wrapper */
.custom-cursor-bg.active {
  width: 3vw;
  height: 3vw;
  clip-path: circle(50% at 50% 50%);
  transform: translate(-50%, -50%) rotate(720deg);
  filter: drop-shadow(0 0 40px rgba(255, 80, 109, 0.9));
}

/* Accolades hover state */
.custom-cursor-bg.accolades-hover {
  width: 3vw;
  height: 3vw;
  clip-path: circle(50% at 50% 50%);
  transform: translate(-50%, -50%) rotate(720deg);
  filter: drop-shadow(0 0 40px rgba(255, 80, 109, 0.9));
}

/* Vanish state for dsPara */
.custom-cursor-bg.vanish {
  animation: cursorExit 0.5s ease forwards;
  transition: none;
}

/* Ensure cursor reappears smoothly when leaving dsPara */
.custom-cursor-bg:not(.vanish):not(.exit) {
  animation: cursorEntrance 0.5s ease forwards;
}

/* Elastic state */
.custom-cursor-bg.elastic {
  width: 3vw;
  height: 3vw;
  clip-path: circle(50% at 50% 50%);
  transform: translate(-50%, -50%) rotate(720deg);
  filter: drop-shadow(0 0 40px rgba(255, 80, 109, 0.9));
  transition: transform 0.7s ease, width 0.2s ease, height 0.2s ease;
}

/* Normal state (overrides hover when over menu/button) */
.custom-cursor-bg.normal {
  width: 1vw;
  height: 1vw;
  clip-path: polygon(60% 0%, 0% 100%, -5% 105%, 100% 100%);
  transform: translate(-50%, -50%) rotate(-43deg);
  filter: drop-shadow(0 0 20px rgba(255, 80, 109, 0.8));
  transition: 
    width 0.2s ease, 
    height 0.2s ease, 
    clip-path 0.2s ease, 
    transform 0.2s ease,
    filter 0.2s ease;
}

/* Text styling */
.custom-cursor-text {
  position: fixed;
  font-size: 0.7vw;
  font-family: sans-serif;
  pointer-events: none;
  z-index: 10000;
  transform: translate(-50%, -50%);
  text-shadow: 0 0 2px rgba(0, 0, 0, 0.8);
  transition: font-size 0.2s ease;
}

/* Text styling for accolades */
.custom-cursor-text.accolades-hover {
  font-size: 0.6vw;
  transform: translate(-50%, -50%);
}

/* Text styling for normal state */
.custom-cursor-text.normal {
  font-size: 0.7vw;
  transform: translate(-50%, -50%);
}

/* Emoji styling */
.custom-cursor-emoji {
  position: fixed;
  pointer-events: none;
  z-index: 10000;
  transform: translate(-50%, -50%);
  font-size: 1.5vw;
}

@media screen and (max-width:1024px){ 
  /* Revert to the default cursor for all elements */
  /* Hide custom cursor elements */
  .custom-cursor-bg,
  .custom-cursor-text,
  .custom-cursor-emoji {
    display: none !important;
  }
}